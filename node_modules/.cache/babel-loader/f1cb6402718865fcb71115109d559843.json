{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evellyin..Helenoir\\\\Desktop\\\\Projeto_PointMarker_Front\\\\src\\\\auth.js\";\nimport react from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isAuth = () => {\n  if (localStorage.getItem('token') !== null) {\n    return true;\n  }\n\n  return false;\n};\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isAuth() ? /*#__PURE__*/_jsxDEV(Component, { ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/',\n        state: {\n          message: \"Usuario não autorizado.\"\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/Evellyin..Helenoir/Desktop/Projeto_PointMarker_Front/src/auth.js"],"names":["react","Route","Redirect","isAuth","localStorage","getItem","PrivateRoute","component","Component","rest","props","pathname","state","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAEA,MAAMC,MAAM,GAAG,MAAK;AAChB,MAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,IAArC,EAA0C;AACtC,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH,CALD;;AAQA,MAAMC,YAAY,GAAG,QAAsC;AAAA,MAArC;AAACC,IAAAA,SAAS,EAAGC,SAAb;AAAwB,OAAGC;AAA3B,GAAqC;AACvD,sBACI,QAAC,KAAD,OACQA,IADR;AAEI,IAAA,MAAM,EAAKC,KAAK,IACZP,MAAM,kBACF,QAAC,SAAD,OAAeM;AAAf;AAAA;AAAA;AAAA;AAAA,YADE,gBAGF,QAAC,QAAD;AACI,MAAA,EAAE,EAAE;AACAE,QAAAA,QAAQ,EAAE,GADV;AAEAC,QAAAA,KAAK,EAAG;AAACC,UAAAA,OAAO,EAAE;AAAV;AAFR;AADR;AAAA;AAAA;AAAA;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAnBD;;KAAMP,Y;AAqBN,eAAeA,YAAf","sourcesContent":["import react from \"react\";\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst isAuth = () =>{\r\n    if(localStorage.getItem('token') !== null){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n\r\nconst PrivateRoute = ({component : Component, ...rest}) => { \r\n    return(\r\n        <Route\r\n            {...rest}\r\n            render = { props =>\r\n                isAuth() ? (\r\n                    <Component {...rest} />\r\n                ): (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/',\r\n                            state : {message: \"Usuario não autorizado.\"}\r\n                        }}\r\n                    />\r\n                )\r\n\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}